name: Solidity

on:
  push:
    branches:
      - main
    paths:
      - "solidity/**"
  pull_request:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment for workflow execution"
        required: false
        default: "dev"
      upstream_builds:
        description: "Upstream builds"
        required: false
      upstream_ref:
        description: "Git reference to checkout (e.g. branch name)"
        required: false
        default: "main"

jobs:
  contracts-detect-changes:
    runs-on: ubuntu-latest
    outputs:
      path-filter: ${{ steps.filter.outputs.path-filter }}
    steps:
      - uses: actions/checkout@v2
        if: github.event_name == 'pull_request'

      - uses: dorny/paths-filter@v2
        if: github.event_name == 'pull_request'
        id: filter
        with:
          filters: |
            path-filter:
              - './solidity/**'

  contracts-build-and-test:
    needs: contracts-detect-changes
    if: |
      github.event_name != 'pull_request'
        || needs.contracts-detect-changes.outputs.path-filter == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./solidity
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "12.x"

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-solidity-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Build solidity contracts
        run: npm run build

      - name: Run tests
        run: npm run test

  contracts-lint:
    needs: contracts-detect-changes
    if: |
      github.event_name == 'push'
        || needs.contracts-detect-changes.outputs.path-filter == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./solidity
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: "12.x"

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-solidity-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Below step is a workaround. We have two package-lock.json configs - one
      # in the `keep-ecdsa` and one in `keep-ecdsa/solidity`.
      # The `@keep-network/prettier-config-keep` dependency is defined in the
      # former one, and is not present in the latter one. When `npm run lint` is
      # run in the `keep-ecdsa/solidity`, the manager looks not only at the
      # config file in that folder, but also at the config in the root directory.
      # It throws an error about missing `@keep-network/prettier-config-keep` if
      # `npm ci` isn't run in the root directory.
      - name: Install dependencies in the root directory
        run: |
          cd ..
          npm ci

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  contracts-migrate-and-publish:
    needs: [contracts-build-and-test]
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./solidity
    outputs:
      version: ${{ steps.npm-version-bump.outputs.version }}
    steps:
      - uses: actions/checkout@v2

      - name: Load environment variables
        uses: keep-network/load-env-variables@v1
        with:
          environment: ${{ github.event.inputs.environment }}

      - uses: actions/setup-node@v2
        with:
          node-version: "12.x"

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-solidity-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Get upstream packages' versions
        uses: keep-network/upstream-builds-query@v1
        id: upstream-builds-query
        with:
          upstream-builds: ${{ github.event.inputs.upstream_builds }}
          query: |
            keep-core-solidity-version = github.com/keep-network/keep-core/solidity#version

      - name: Resolve latest contracts
        run: |
          npm update @keep-network/sortition-pools
          npm install --save-exact \
            @keep-network/keep-core@${{ steps.upstream-builds-query.outputs.keep-core-solidity-version }}

      - name: Migrate contracts on Ethereum
        if: github.event.inputs.environment != 'alfajores'
        env:
          CHAIN_API_URL: ${{ secrets.KEEP_TEST_ETH_HOSTNAME }}
          CONTRACT_OWNER_ACCOUNT_PRIVATE_KEY: |
            ${{ secrets.KEEP_TEST_ETH_CONTRACT_OWNER_PRIVATE_KEY }}
        run: npx truffle migrate --reset --network $TRUFFLE_NETWORK

      - name: Migrate contracts on Celo
        if: github.event.inputs.environment == 'alfajores'
        env:
          CHAIN_API_URL: ${{ secrets.KEEP_TEST_CELO_HOSTNAME }}
          CONTRACT_OWNER_ACCOUNT_PRIVATE_KEY: |
            ${{ secrets.KEEP_TEST_CELO_CONTRACT_OWNER_PRIVATE_KEY }}
        run: npx truffle migrate --reset --network $TRUFFLE_NETWORK

      - name: Copy artifacts
        run: |
          mkdir -p artifacts
          cp -r build/contracts/* artifacts/

      - name: Bump up package version
        id: npm-version-bump
        uses: keep-network/npm-version-bump@v2
        with:
          work-dir: ./solidity
          environment: ${{ github.event.inputs.environment }}
          branch: ${{ github.ref }}
          commit: ${{ github.sha }}

      - name: Push contracts to Tenderly
        if: github.event.inputs.environment == 'ropsten'
        # TODO: once below action gets tagged replace `@main` with `@v1`
        uses: keep-network/tenderly-push-action@main
        continue-on-error: true
        with:
          working-directory: ./solidity
          tenderly-token: ${{ secrets.TENDERLY_TOKEN }}
          tenderly-project: thesis/keep-test
          eth-network-id: ${{ env.NETWORK_ID }}
          github-project-name: keep-ecdsa
          version-tag: ${{ steps.npm-version-bump.outputs.version }}

      - name: Publish to npm
        run: |
          echo //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }} > .npmrc
          npm publish --access=public

      - name: Upload keep-ecdsa contracts artifacts for initcontainer build
        uses: actions/upload-artifact@v2
        with:
          name: Selected contracts
          path: |
            ./solidity/build/contracts/BondedECDSAKeepFactory.json
            ./solidity/build/contracts/KeepBonding.json

      - name: Upload keep-core contracts artifacts for initcontainer build
        uses: actions/upload-artifact@v2
        with:
          name: Selected contracts
          path: |
            ./solidity/node_modules/@keep-network/keep-core/artifacts/KeepToken.json
            ./solidity/node_modules/@keep-network/keep-core/artifacts/TokenStaking.json

  contracts-build-and-publish-initcontainer:
    needs: [contracts-migrate-and-publish]
    if: needs.contracts-migrate-and-publish.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Load environment variables
        uses: keep-network/load-env-variables@v1
        with:
          environment: ${{ github.event.inputs.environment }}

      - name: Download migrated contracts artifacts
        uses: actions/download-artifact@v2
        with:
          name: Selected contracts
          path: ./infrastructure/kube/templates/keep-ecdsa/initcontainer/provision-keep-ecdsa/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Google Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.GCR_REGISTRY_URL }}
          username: _json_key
          password: ${{ secrets.KEEP_TEST_GCR_JSON_KEY }}

      - name: Build and publish initcontainer
        uses: docker/build-push-action@v2
        env:
          IMAGE_NAME: initcontainer-provision-keep-ecdsa-${{ env.CHAIN }}
        with:
          context: ./infrastructure/kube/templates/keep-ecdsa/initcontainer/provision-keep-ecdsa/
          # GCR image should be named according to following convention:
          # HOSTNAME/PROJECT-ID/IMAGE:TAG
          # We don't use TAG yet, will be added at later stages of work on RFC-18.
          tags: ${{ env.GCR_REGISTRY_URL }}/${{ env.GOOGLE_PROJECT_ID }}/${{ env.IMAGE_NAME }}
          labels: |
            revision=${{ github.sha }}
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Notify CI about completion of the workflow
        uses: keep-network/notify-workflow-completed@v1
        env:
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
        with:
          module: "github.com/keep-network/keep-ecdsa/solidity"
          url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          environment: ${{ github.event.inputs.environment }}
          upstream_builds: ${{ github.event.inputs.upstream_builds }}
          upstream_ref: ${{ github.event.inputs.upstream_ref }}
          version: ${{ needs.contracts-migrate-and-publish.outputs.version }}

      - # Temp fix - move cache instead of copying (added below step and
        # modified value of `cache-to`).
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        # Without the change some jobs were failing with `no space left on device`
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
