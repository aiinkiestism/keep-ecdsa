name: Go / Celo

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-celo-cache
          key: ${{ runner.os }}-buildx-celo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-celo-
      # TODO: This step was left here intentionally so we can track disk space
      # usage for a while. We were trying to fight problems with out of disk space
      # that happened due to the size of data restored from cache. The cache size
      # was growing linearly with subsequent workflow runs. We want to observe
      # available disk space for `/`. Fresh execution starts with 21 GB, we expect
      # to have no less than 15 GB after the cache is restored.
      - run: sudo df -h

      - name: Build Docker Build Image
        uses: docker/build-push-action@v2
        with:
          target: gobuild
          tags: go-build-env-celo
          build-args: |
            HOST_CHAIN=celo
          # REVISION=${{ github.sha }} TODO: set revision only when we want to publish the image
          # VERSION= ? TODO: Configure version, sample: 1.7.6
          load: true # load image to local registry to use it in next steps
          cache-from: type=local,src=/tmp/.buildx-celo-cache
          cache-to: type=local,dest=/tmp/.buildx-celo-cache

      - name: Create test results directory
        run: mkdir test-results-celo

      - name: Run Go tests
        run: |
          docker run \
            --volume $GITHUB_WORKSPACE/test-results-celo:/mnt/test-results-celo \
            --workdir /go/src/github.com/keep-network/keep-ecdsa \
            go-build-env-celo \
            gotestsum --junitfile /mnt/test-results-celo/unit-tests-celo.xml -- -tags=celo,musl ./...

      - name: Publish unit test results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files:  ./test-results-celo/unit-tests-celo.xml
          check_name: Celo Client Test Results # name under which test results will be presented in GitHub (optional)
          comment_on_pr: false # turns off commenting on Pull Requests

      # This step is executed after the tests as we want to configure it eventually
      # as image publication step.
      - name: Build Docker Runtime Image
        uses: docker/build-push-action@v2
        with:
          tags: keep-ecdsa-celo
          labels: |
            revision=${{ github.sha }}
          # TODO: Check branch name and publish to a registry accordingly to the
          # environment.
          # push: true # publish to registry