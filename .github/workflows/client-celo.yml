name: Go / Celo

on:
  push:
    branches:
      - master
    paths-ignore:
      - "docs/**"
      - "infrastructure/**"
      - "scripts/**"
      - "staker-rewards/**"
  pull_request:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment for workflow execution'
        required: false
        default: 'dev'
      upstream_builds:
        description: 'Upstream builds'
        required: false
      ref:
        description: 'Git reference to checkout (e.g. branch name)'
        required: false
        default: 'master'

jobs:
  client-detect-changes:
    runs-on: ubuntu-latest
    outputs:
      path-filter: ${{ steps.filter.outputs.path-filter }}
    steps:
      - uses: actions/checkout@v2
        if: github.event_name == 'pull_request' 
        
      - uses: dorny/paths-filter@v2
        if: github.event_name == 'pull_request' 
        id: filter
        with:
          filters: |
            path-filter:
              - './!((docs|infrastructure|scripts|staker-rewards)/**)'

  client-build-test-publish:
    needs: client-detect-changes
    if: |
      github.event_name != 'pull_request'
        || needs.client-detect-changes.outputs.path-filter == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Load environment variables
        uses: keep-network/load-env-variables@v1
        env: 
          CI_GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}
        with:
          # TODO: Consider passing of `environment` input instead of using 
          # hardcoded value. Would require some rework in action's code or
          # in config files.
          environment: 'alfajores'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-celo-cache
          key: ${{ runner.os }}-buildx-celo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-celo-

      - name: Build Docker Build Image
        uses: docker/build-push-action@v2
        with:
          target: gobuild
          tags: go-build-env-celo
          build-args: |
            HOST_CHAIN=celo
          load: true # load image to local registry to use it in next steps
          cache-from: type=local,src=/tmp/.buildx-celo-cache
          cache-to: type=local,dest=/tmp/.buildx-celo-cache

      - name: Run Go tests
        run: |
          docker run \
            --workdir /go/src/github.com/keep-network/keep-ecdsa \
            go-build-env-celo \
            gotestsum -- -tags=celo,musl ./...

      - name: Login to Google Container Registry
        if: github.event_name == 'workflow_dispatch'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.GCR_REGISTRY_URL }}
          username: _json_key
          password: ${{ secrets.KEEP_TEST_GCR_JSON_KEY }}

      - name: Build and publish Docker Runtime Image
        uses: docker/build-push-action@v2
        env:
          IMAGE_NAME: 'keep-ecdsa-celo'
        with:
          # GCR image should be named according to following convention:
          # HOSTNAME/PROJECT-ID/IMAGE:TAG
          # We don't use TAG yet, will be added at later stages of work on RFC-18.
          tags: ${{ env.GCR_REGISTRY_URL }}/${{ env.GOOGLE_PROJECT_ID }}/${{ env.IMAGE_NAME }}
          labels: revision=${{ github.sha }}
          build-args: |
            HOST_CHAIN=celo
            REVISION=${{ github.sha }}
          # VERSION= ? TODO: Configure version, sample: 1.7.6
          push: ${{ github.event_name == 'workflow_dispatch' }}